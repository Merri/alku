:where(:root) {
	--option-background-color: Field;
	--option-border-color: FieldText;
	--option-color: FieldText;
	--option-muted-color: var(--muted-30);
	--option-size: 1.5rem;
}

@supports (color: color-mix(in lch, tan, tan 0%)) {
	:where(:root) {
		--option-muted-color: color-mix(in lch, FieldText, Field 50%);
	}
}

:where(
		input:not(
				[type='checkbox' i],
				[type='radio' i],
				[type='range' i],
				[type='file' i],
				[type='color' i],
				[type='image' i]
			),
		select,
		textarea
	) {
	-webkit-appearance: none;
	appearance: none;
	background: var(--option-background-color);
	border: 2px solid var(--option-muted-color);
	border-radius: 4px;
	color: var(--option-color);
	padding: calc(var(--default-spacing, 16px) * 0.625) var(--default-spacing, 16px);
	scroll-padding: calc(var(--default-spacing, 16px) * 0.625) var(--default-spacing, 16px);
}

:where(input):is([type='button' i], [type='reset' i], [type='submit' i]), /* Use <button /> */
[type='datetime' i], /* Use datetime-local */
[type='number' i] /* Use <input type="text" inputmode="numeric" pattern="\d*" /> or <input type="tel" /> */ {
	background: var(--negative-color) !important;
	border-color: var(--negative-color) !important;
	text-decoration: line-through;
}

:where([type='color' i]) {
	background: var(--option-background-color);
	border: 2px solid var(--option-muted-color);
	border-radius: 4px;
	padding: calc(var(--default-spacing, 16px) * 0.125);
}

:where([type='range' i]:not([hidden])) {
	--outline: unset;
	--outline-offset: unset;
	--range-size: calc(var(--default-spacing, 16px) * 0.5);
	--range-thumb-size: calc(var(--default-spacing, 16px) * 1.5);
	-webkit-appearance: none;
	appearance: none;
	background: unset;
	display: inline-grid;
	height: calc(var(--default-spacing, 16px) * 0.5);
	outline: none;
}

:where(label > [type='range' i]) {
	padding: calc(var(--default-spacing, 16px) * 1.125) 0 calc(var(--default-spacing, 16px) * 1.375);
}

:where([type='range' i]:focus-visible) {
	--outline: var(--focus-indication);
	--outline-offset: calc(var(--focus-outside) * 2);
}

::-webkit-slider-runnable-track {
	background: var(--option-background-color);
	border: 2px solid var(--option-muted-color);
	border-radius: 4px;
	box-sizing: border-box;
	height: var(--range-size);
	outline: var(--outline);
	outline-offset: var(--outline-offset);
}

::-moz-range-track {
	background: var(--option-background-color);
	border: 2px solid var(--option-muted-color);
	border-radius: 4px;
	box-sizing: border-box;
	height: var(--range-size);
	outline: var(--outline);
	outline-offset: var(--outline-offset);
}

::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	background: var(--option-color);
	border-radius: 50%;
	box-shadow: 0 0 0 2px var(--option-background-color);
	height: var(--range-thumb-size);
	position: relative;
	top: 50%;
	transform: translateY(-50%) scale(var(--thumb-scale, 1));
	width: var(--range-thumb-size);
}

::-moz-range-thumb {
	-webkit-appearance: none;
	appearance: none;
	background: var(--option-color);
	border: none;
	border-radius: 50%;
	box-shadow: 0 0 0 2px var(--option-background-color);
	height: var(--range-thumb-size);
	position: relative;
	top: 50%;
	transform: translateY(0%) scale(var(--thumb-scale, 1));
	width: var(--range-thumb-size);
}

:where(:active)::-webkit-slider-thumb {
	--thumb-scale: 1.25;
}

:where(:active)::-moz-range-thumb {
	--thumb-scale: 1.25;
}

:where(select:not([multiple], [size])) {
	/* chevron */
	background-image: linear-gradient(45deg, var(--option-background-color) 22.5%, transparent calc(22.5% + 1px)),
		linear-gradient(315deg, var(--option-background-color) 22.5%, transparent calc(22.5% + 1px)),
		linear-gradient(135deg, var(--option-background-color) 22.5%, transparent calc(22.5% + 1px)),
		linear-gradient(225deg, var(--option-background-color) 22.5%, transparent calc(22.5% + 1px)),
		linear-gradient(45deg, currentColor calc(35% - 1px), transparent 35%),
		linear-gradient(315deg, currentColor calc(35% - 1px), transparent 35%);
	/* 1rem or calc(100% - 1rem) */
	background-position: calc((100% - 2rem) / 2 * (var(--dir-adjust) + 1) + 1rem) calc(50% - 0.125rem);
	background-repeat: no-repeat;
	background-size: 1rem 1rem;
	padding-inline-end: 3rem;
}

:where(label:not([hidden])) {
	align-items: center;
	align-self: flex-start;
	display: inline-flex;
	flex-wrap: wrap;
	gap: calc(var(--default-spacing, 16px) * 0.25) calc(var(--default-spacing, 16px) * 0.5);
	padding: calc(var(--default-spacing, 16px) * 0.25);
	position: relative;
	user-select: none;
	vertical-align: top;
}

:where(:is(input, select, textarea) ~ label, :has(> :is(input, select, textarea)) > label) {
	align-self: unset;
}

:where(label > *) {
	user-select: text;
}

:where(label > :is(input:not([type='checkbox' i], [type='radio' i]), select, textarea)) {
	flex: 100%;
	min-inline-size: 0;
}

:where(:is(input:not([type='checkbox' i], [type='radio' i]), select, textarea)) ~ [data-text-color='state' i] {
	color: var(--muted-color);
}

:where([aria-invalid='true' i]) ~ [data-text-color='state' i] {
	color: var(--negative-color);
}

:where([aria-invalid='false' i]) ~ [data-text-color='state' i] {
	color: var(--positive-color);
}

:where(label:has(> :is([type='checkbox' i], [type='radio' i]):focus-visible)) {
	outline: var(--focus-indication);
	outline-offset: var(--focus-outside);
}

:where(label:has(> :is([type='checkbox' i], [type='radio' i]):focus-visible) > :focus:not([aria-invalid])) {
	outline: none;
}

:where(:is([type='checkbox' i], [type='radio' i]):not([hidden])) {
	-webkit-appearance: none;
	appearance: none;
	aspect-ratio: 1 / 1;
	background: var(--option-background-color);
	border: 2px solid var(--option-border-color);
	color: var(--option-background-color);
	display: inline-grid;
	font-size: calc(var(--option-size) - 0.5rem);
	font-weight: var(--default-bolder-weight, bolder);
	height: var(--option-size);
	line-height: 1;
	place-content: center;
}

@media not all and (prefers-reduced-motion) {
	:where(:is([type='checkbox' i], [type='radio' i])) {
		transition: background 125ms ease-in-out, color 125ms ease-in-out;
	}
}

:where([type='checkbox' i]:not([role='switch' i])) {
	border-radius: 4px;
}

:where([type='checkbox' i][role='switch' i]) {
	--switch-softness: 0.125rem;
	aspect-ratio: 2 / 1;
	background-color: var(--option-background-color);
	background-image: radial-gradient(
		circle,
		currentColor calc(33.333% - var(--switch-softness)),
		transparent calc(33.333% + 1px)
	);
	background-position: calc(var(--option-size) * -0.5);
	background-repeat: no-repeat;
	border-radius: calc(var(--option-size) * 0.5);
	color: var(--option-muted-color);
}

:where([type='radio' i]) {
	background-image: radial-gradient(circle, currentColor 50%, transparent calc(50% + 1px));
	border-radius: 50%;
}

:where(:is([type='checkbox' i][role='switch' i], [type='radio' i]):checked) {
	color: var(--option-color);
}

:where([type='checkbox' i]:not([role='switch' i]):checked) {
	background-color: var(--option-color);
}

:where([type='checkbox' i][role='switch' i]:checked) {
	--switch-softness: 0px;
	background-position: calc(var(--option-size) * 0.5);
}

:where([type='checkbox' i]:not([role='switch' i]))::after {
	content: '\2713';
}

:where(:is(input, select, textarea)[aria-invalid='true' i]) {
	box-shadow: inset 0 -2px 0 var(--negative-color);
	outline-color: var(--negative-color);
}

:where(:is(input, select, textarea)[aria-invalid='false' i]) {
	box-shadow: inset 0 -2px 0 var(--positive-color);
	outline-color: var(--positive-color);
}

:where(:is([type='checkbox' i], [type='radio' i])[aria-invalid]) {
	box-shadow: unset;
}

:where(:is([type='checkbox' i], [type='radio' i])[aria-invalid]:not(:focus-visible)) {
	outline-offset: 2px;
	outline-style: solid;
	outline-width: 2px;
}

/* Indicate element is disabled */
:is([aria-disabled='true' i], [disabled], :disabled) {
	filter: saturate(0.4);
	opacity: 0.6;
}

:where([aria-disabled='true' i], [disabled], :disabled) :is([aria-disabled='true' i], [disabled], :disabled) {
	filter: unset;
	opacity: unset;
}
