:where(:root) {
	/* Same as in `[data-column="mediumContent"]` */
	--measure: 80ch;
}

:where(body:not([data-column])),
:where(al-ku[column]:not([hidden]):not([column=''])),
[data-column]:where(:not([hidden]):not([data-column=''])) {
	display: grid;
}

/* The grid column idea is stolen from Simple.css */
:where(body:not([data-column])),
:where(al-ku:is([column*='content ' i], [column$='content' i])),
[data-column*='content ' i],
[data-column$='content' i] {
	/* Three columns where middle is for content. */
	grid-template-columns: 1fr min(var(--measure, 80ch), 90vw) 1fr;
	/* Only allow the last grid item to stretch when viewport taller than total content. */
	grid-template-rows: max-content;
}

:where(
		body:not([data-column]),
		al-ku:is([column*='content ' i], [column$='content' i]),
		[data-column*='content ' i],
		[data-column$='content' i]
	)
	> :where(:not(footer, header)) {
	/* Place everything except footer and header to center column. */
	grid-column: 2;
}

:where(
		body:not([data-column]),
		al-ku:is([column*='content ' i], [column$='content' i]),
		[data-column*='content ' i],
		[data-column$='content' i]
	)
	> :where(footer, header) {
	/* Keep footer content at the very bottom. */
	align-self: flex-end;
	/* Extend to all three columns. */
	grid-column: 1 / -1;
}

:where(al-ku[column~='breakout' i]),
[data-column~='breakout' i] {
	/* Extend to all three columns. */
	grid-column: 1 / -1;
}

:where(al-ku[column~='narrowContent' i]),
[data-column~='narrowContent' i] {
	--measure: 60ch;
}

:where(al-ku[column~='smallContent' i]),
[data-column~='smallContent' i] {
	--measure: 70ch;
}

:where(al-ku[column~='mediumContent' i]),
[data-column~='mediumContent' i] {
	--measure: 80ch;
}

:where(al-ku[column~='largeContent' i]),
[data-column~='largeContent' i] {
	--measure: 115ch;
}

@supports (width: round(80ch, 1rem)) {
	:where(:root) {
		--measure: round(80ch, 1rem);
	}

	:where(al-ku[column~='narrowContent' i]),
	[data-column~='narrowContent' i] {
		--measure: round(60ch, 1rem);
	}

	:where(al-ku[column~='smallContent' i]),
	[data-column~='smallContent' i] {
		--measure: round(70ch, 1rem);
	}

	:where(al-ku[column~='mediumContent' i]),
	[data-column~='mediumContent' i] {
		--measure: round(80ch, 1rem);
	}

	:where(al-ku[column~='largeContent' i]),
	[data-column~='largeContent' i] {
		--measure: round(115ch, 1rem);
	}
}
