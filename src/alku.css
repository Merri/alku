:where(:root) {
	--emoji-font: 'Apple Color Emoji', 'Segoe UI Emoji', 'Noto Color Emoji', 'Android Emoji', 'EmojiOne Mozilla',
		'Twemoji Mozilla', 'Noto Emoji', 'Segoe UI Symbol', EmojiSymbols;
	--mono-font-stack: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace, var(--emoji-font);

	--default-font: sans-serif, var(--emoji-font);
	--heading-font: serif, var(--emoji-font);
	--marker-font: var(--mono-font-stack);
	--mono-font: var(--mono-font-stack);

	--highlight-10: rgb(255 255 255 / 10%);
	--highlight-30: rgb(255 255 255 / 30%);
	--highlight-50: rgb(255 255 255 / 50%);
	--highlight-70: rgb(255 255 255 / 70%);
	--highlight-90: rgb(255 255 255 / 90%);
	--shadow-10: rgb(0 0 0 / 10%);
	--shadow-30: rgb(0 0 0 / 30%);
	--shadow-50: rgb(0 0 0 / 50%);
	--shadow-70: rgb(0 0 0 / 70%);
	--shadow-90: rgb(0 0 0 / 90%);

	/* we do not use LinkText for links (by default) so it "frees" it up to use as AccentColor fallback */
	--accent-color: LinkText;
	--code-color: var(--shadow-10);
	--code-border-color: var(--code-color);
	--code-text-color: currentColor;
	--focus-color: Highlight;
	--hash-underline-color: var(--muted-30);
	--kbd-color: CanvasText;
	--kbd-border-color: var(--muted-30);
	--kbd-text-color: Canvas;
	--link-color: currentColor;
	--mark-color: Mark;
	--mark-border-color: var(--mark-color);
	--mark-text-color: MarkText;
	--muted-color: GrayText;
	--negative-color: crimson;
	--negative-color-text: white;
	--positive-color: seagreen;
	--positive-color-text: white;

	--button-border: ButtonBorder;
	--button-face: ButtonFace;

	--focus-indication: 3px solid var(--focus-color);
	--focus-inside: -3px;
	--focus-outside: 3px;

	--mask-chevron-down: url("data:image/svg+xml,<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M4 9L12 17L20 9' fill='none' stroke='black' stroke-width='2.5'/></svg>");
	--mask-cross: url("data:image/svg+xml,<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M19 5L5 19M5 5L19 19' fill='none' stroke='black' stroke-width='2.5'/></svg>");

	--ol-indent: 2em;
	--ul-indent: 1.375em;
}

@supports (color: AccentColor) {
	:where(:root) {
		--accent-color: AccentColor;
	}
}

:where([data-color~='canvas' i]) {
	background-color: Canvas;
	color: CanvasText;
}

:where([data-color~='contrast' i]) {
	background-color: CanvasText;
	color: Canvas;
}

:where([data-color*='dark' i][data-color*='light' i]) {
	color-scheme: dark light;
}

:where([data-color*='light' i]:not([data-color*='dark' i])) {
	color-scheme: light;
	--muted-10: var(--shadow-10);
	--muted-30: var(--shadow-30);
	--muted-50: var(--shadow-50);
	--muted-70: var(--shadow-70);
	--muted-90: var(--shadow-90);
	/* Chrome Windows has a light mode ButtonBorder color of #000 which is insanely dark! So... a workaround. */
	--button-border: var(--muted-10);
}

/* muted variants like this are especially useful when color-mix is not supported */
@media (prefers-color-scheme: light) {
	:where(:root) {
		--muted-10: var(--shadow-10);
		--muted-30: var(--shadow-30);
		--muted-50: var(--shadow-50);
		--muted-70: var(--shadow-70);
		--muted-90: var(--shadow-90);
		/* Chrome Windows has a light mode ButtonBorder color of #000 which is insanely dark! So... a workaround. */
		--button-border: var(--muted-10);
	}
}

:where([data-color*='dark' i]:not([data-color*='light' i])) {
	color-scheme: dark;
	--muted-10: var(--highlight-10);
	--muted-30: var(--highlight-30);
	--muted-50: var(--highlight-50);
	--muted-70: var(--highlight-70);
	--muted-90: var(--highlight-90);
	/* Chrome Windows has a dark mode ButtonFace color of #6B6B6B which is way too light! So... a workaround. */
	--button-face: Canvas;
}

@media (prefers-color-scheme: dark) {
	:where(:root) {
		--muted-10: var(--highlight-10);
		--muted-30: var(--highlight-30);
		--muted-50: var(--highlight-50);
		--muted-70: var(--highlight-70);
		--muted-90: var(--highlight-90);
		/* Chrome Windows has a dark mode ButtonFace color of #6B6B6B which is way too light! So... a workaround. */
		--button-face: Canvas;
	}
}

@supports (color: color-mix(in oklab, black, white 50%)) {
	:where(:root:not([data-color-mix='false'] i)) {
		--focus-color: color-mix(in oklab, color-mix(in oklab, Highlight, VisitedText 30%), currentColor 12.5%);
		--kbd-color: color-mix(in oklab, CanvasText, currentColor 10%);
		--kbd-border-color: color-mix(in oklab, CanvasText, currentColor 30%);
		--kbd-text-color: color-mix(in oklab, Canvas, currentColor 10%);
		--mark-color: color-mix(in oklab, Mark, currentColor 20%);
		--mark-text-color: color-mix(in oklab, MarkText, currentColor 10%);
		--accent-color: color-mix(in oklab, LinkText, CanvasText 35%);
		--muted-color: color-mix(in oklab, transparent, currentColor 50%);
		--negative-color: color-mix(in oklab, crimson, CanvasText 12.5%);
		--positive-color: color-mix(in oklab, seagreen, CanvasText 12.5%);
	}

	@supports (color: AccentColor) {
		:where(:root:not([data-color-mix='false'] i)) {
			--accent-color: color-mix(in oklab, AccentColor, CanvasText 35%);
		}
	}
}

:where(:root),
:where([dir='ltr' i]) {
	--dir-adjust: 1;
}

:where([dir='rtl' i]) {
	--dir-adjust: -1;
}

@media not all and (prefers-reduced-motion) {
	:where(html) {
		scroll-behavior: smooth;
	}
}

:where(:target) {
	scroll-margin-top: 2rem;
}

/* Indicate element is busy */
:where([aria-busy='true' i]) {
	cursor: progress;
}

:where(html) {
	color-scheme: dark light;
	font-family: var(--default-font);
	font-feature-settings: 'tnum';
	font-variant-numeric: tabular-nums;
	line-height: 1.5;
	tab-size: 4;
	-webkit-tap-highlight-color: transparent;
	-webkit-text-size-adjust: 100%;
	text-size-adjust: 100%;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

:where(body) {
	display: grid;
	grid-template-columns: 1fr min(65rem, 90%) 1fr;
	margin: 0;
	min-height: 100dvh;
}

:where(body > *) {
	grid-column: 2;
}

:where(body > footer),
:where(body > header) {
	grid-column: 1 / -1;
}

/* Correct the font size on `h1` elements within `section` and `article` contexts in Chrome, Edge, Firefox, and Safari. */
:where(h1) {
	font-size: 2em;
}

:where(h1, h2, h3, h4, h5, h6) {
	font-family: var(--heading-font);
	line-height: var(--heading-line-height, inherit);
	/* Have more space above to make heading more a part of the text below. */
	margin-block: 2rem 1rem;
	margin-inline: 0;
}

[data-text-color='current' i] {
	color: currentColor;
}

:where(hgroup > :is(h1, h2, h3, h4, h5, h6) + p),
[data-text-color='muted' i] {
	color: var(--muted-color);
}

:where(hgroup > *) {
	margin: 0;
}

/* Text-level semantics
 * ========================================================================== */

/* Add the correct text decoration in Safari. */
:where(abbr[title]) {
	text-decoration: underline;
	text-decoration: underline dotted;
}

:where(code, kbd, samp) {
	/* Correct the inheritance and scaling of font size in all browsers. */
	font-family: var(--mono-font);
	/* Correct the odd `em` font sizing in all browsers. */
	font-size: 1em;
}

:where(code) {
	background: var(--code-color);
	border-radius: 0.125rem;
	box-shadow: var(--code-border-color);
	color: var(--code-text-color);
	margin-inline: 0.125rem;
	padding-inline: 0.125rem;
}

:where(kbd) {
	background: var(--kbd-color);
	border-radius: 0.125rem;
	box-shadow: 0 0 0 0.125rem var(--kbd-border-color);
	color: var(--kbd-text-color);
	margin-inline: 0.125rem;
	padding-inline: 0.125rem;
}

:where(mark) {
	background: var(--mark-color);
	box-shadow: 0 0 0 0.125rem var(--mark-border-color);
	color: var(--mark-text-color);
	padding-inline: 0.125rem;
}

:where(ins) {
	text-decoration: inherit;
}

:where(ins),
[data-text-color='positive' i] {
	color: var(--positive-color);
}

:where(del),
[data-text-color='negative' i] {
	color: var(--negative-color);
}

/* Increase size from 80% for ease-of-read. */
:where(small) {
	font-size: 87.5%;
}

/* Remove code styling when as direct child of pre or table cell. */
:where(:is(pre, td, th) > code) {
	background: unset;
	border-radius: unset;
	box-shadow: unset;
	color: unset;
	margin-inline: unset;
	padding-inline: unset;
}

/* This is a commonly used combination, add padding for visual appeal. */
:where(pre > code) {
	display: block;
	padding: 1rem;
}

/* Prevent effecting line height in all browsers. */
:where(sub, sup) {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

:where(sub) {
	bottom: -0.25em;
}

:where(sup) {
	top: -0.5em;
}

/* Opinioned normalization: render as 4px thick divider, support both horizontal and vertical render */
:where(hr) {
	block-size: 0;
	border: 0.125rem solid currentColor;
	border-radius: 0.125rem;
	color: var(--muted-color, inherit);
	inline-size: 100%;
	margin-block: 2rem;
	margin-inline: 0;
	overflow: visible;
}

/* Normalize: be more important than star reset */
hr {
	box-sizing: border-box;
}

/* Remove the margin on nested lists in Chrome, Edge, and Safari. */
:where(dl, ol, ul) :where(dl, ol, ul) {
	margin-block: 0;
}

/* Remove border for visual appeal. */
:where(iframe) {
	border-style: none;
}

/* Align vertically to center instead of baseline for visual appeal. */
:where(audio, canvas, iframe, img, progress, svg, video) {
	vertical-align: middle;
}

/* Restrict media elements from breaking layout in limited spaces. */
:where(iframe, img, input, video, select, textarea) {
	height: auto;
	max-width: 100%;
}

/* Tabular data
 * ========================================================================== */

/* Fix undesired side-effect for this particular combination. */
:where(table img) {
	max-width: unset;
}

/* Remove spacing between table cells by using collapsed variant. */
:where(table) {
	border-collapse: collapse;
	border-color: currentColor;
	text-indent: 0;
}

/* Fix glitches on how Chrome and Firefox handle border color when background color is applied to table cell */
:where(td, th) {
	background-clip: padding-box;
	filter: brightness(1);
}

/* Forms
 * ========================================================================== */

/* Reset fieldset for visual appeal. */
:where(fieldset) {
	border: 0 solid transparent;
	margin: 0;
	padding: 0;
}

/* Remove padding to have expected appearance together with the fieldset reset. */
:where(legend) {
	padding: 0;
}

/* Use similar font on controls and inherit it by default. */
:where(button, input, optgroup, select, textarea) {
	font-family: var(--default-font);
	font-size: inherit;
	line-height: 1.5;
}

/* Remove the margin on controls in Safari. */
:where(button, input, select) {
	margin: 0;
}

/* Restore monospace font. */
:where([type*='date' i], [type='time' i], [type='month' i], [type='week' i]) {
	font-family: var(--mono-font);
}

/* Safari zooms if size is different than 16px */
:where(input, optgroup, select, textarea) {
	font-size: 1rem;
}

/* Remove the inheritance of text transform in Firefox. */
:where(button) {
	text-transform: none;
}

/* Correct the inability to style buttons in iOS and Safari. */
:where(button, [type='button' i], [type='reset' i], [type='submit' i]) {
	-webkit-appearance: button;
}

/* Remove italics for easier reading by default. */
:where(address, optgroup) {
	font-style: normal;
}

/* Resizing both X & Y is hard for some users, and easily breaks layouts. */
:where(textarea) {
	resize: vertical;
}

/* Provide more vertical space by default. */
:where(textarea:not([rows])) {
	height: 9em;
}

/* Interactive
 * ========================================================================== */

/* Add the correct styles in Safari. */
:where(dialog) {
	background-color: white;
	border: solid;
	color: black;
	height: -moz-fit-content;
	height: fit-content;
	left: 0;
	margin: auto;
	padding: 1em;
	position: absolute;
	right: 0;
	width: -moz-fit-content;
	width: fit-content;
}

:where(dialog:not([open])) {
	display: none;
}

/* Add the correct display in all browsers. */
:where(summary) {
	display: list-item;
}

/* Browser engine specific pseudo elements and selectors
 * ========================================================================== */

/* Correct the odd appearance in Chrome and Safari. */
:where([type='search']) {
	-webkit-appearance: textfield;
	appearance: textfield;
}

/* Remove the inner padding in Chrome and Safari on macOS. */
::-webkit-search-decoration {
	-webkit-appearance: none;
}

/* Correct the text style of placeholders in Chrome, Edge, and Safari. */
::-webkit-input-placeholder {
	color: inherit;
	opacity: 0.5625;
}

/* Change default color picker style. */
::-webkit-color-swatch-wrapper {
	padding: 0;
}

/* Change default color picker style. */
::-webkit-color-swatch {
	border: 0;
	min-block-size: 2.5rem;
	min-inline-size: 2.5rem;
}

/* Change default color picker style. */
::-moz-color-swatch {
	border: 0;
	min-block-size: 2.5rem;
	min-inline-size: 2.5rem;
}

/* Make picker form fields have consistent sizing for when not defining explicit height. */
::-webkit-datetime-edit-fields-wrapper,
::-webkit-calendar-picker-indicator {
	padding: 0;
}

/* Correct the inability to style clickable types in iOS and Safari. */
::-webkit-file-upload-button {
	-webkit-appearance: button;
	font: inherit;
}

/* Remove the additional :invalid styles in Firefox. */
:where(:-moz-ui-invalid) {
	box-shadow: none;
}

/* Not needed in Firefox when using strong focus indicator. */
::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/* Strong focus indicator + indicate focus utility
 * ========================================================================== */

:where(:focus:not(:focus-visible)) {
	outline: none;
}

:where(:focus-visible),
:where([data-indicate-focus='before' i]:focus-visible)::before,
:where([data-indicate-focus='after' i]:focus-visible)::after {
	outline: var(--focus-indication);
	outline-offset: var(--focus-outside);
}

:where([data-indicate-focus]):focus {
	outline: none;
}
