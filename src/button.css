/* fallback colors for color-mix */
:where(button, [data-button], [type='file' i]) {
	--accent-color-background: Canvas;
	--accent-color-text: LinkText;
	--accent-border: var(--muted-50);
	--accent-hover: var(--muted-10);
	--accent-active: var(--muted-30);
	/* system = OS default button color */
	--system-hover: var(--muted-10);
	--system-active: var(--muted-30);
	--canvas-border: var(--muted-50);
	--canvas-hover: var(--muted-10);
	--canvas-active: var(--muted-30);
	--system-contrast-hover: var(--shadow-10);
	--system-contrast-active: var(--shadow-30);
	--canvas-contrast-hover: var(--muted-10);
	--canvas-contrast-active: var(--muted-30);
	--state-on-background: var(--muted-90);
}

@supports (color: AccentColor) {
	:where(button, [data-button], [type='file' i]) {
		/* this seems backwards, but we want the default canvas equivalent color (= whitest or blackest) in the bg */
		--accent-color-background: AccentColorText;
		--accent-color-text: AccentColor;
	}
}

@supports (color: color-mix(in oklch, black, white 50%)) {
	:where(:root:not([data-color-mix='false'] i) :is(button, [data-button], [type='file' i])) {
		--accent-border: color-mix(
			in oklch,
			var(--button-color-background, var(--accent-color-background)),
			var(--button-color-text, var(--accent-color-text)) 50%
		);
		--accent-hover: color-mix(in oklch, var(--button-color-background, Canvas), var(--accent-color-text) 25%);
		--accent-active: color-mix(in oklch, var(--button-color-background, Canvas), var(--accent-color-text) 50%);
		--canvas-border: color-mix(
			in oklch,
			var(--button-color-background, Canvas),
			var(--button-color-text, CanvasText) 50%
		);
		--canvas-hover: color-mix(in oklch, var(--button-color-background, Canvas), Highlight 25%);
		--canvas-active: color-mix(in oklch, var(--button-color-background, Canvas), Highlight 50%);
		--system-contrast-hover: color-mix(in oklch, var(--button-color-background, ButtonText), currentColor 15%);
		--system-contrast-active: color-mix(in oklch, var(--button-color-background, ButtonText), currentColor 25%);
		--canvas-contrast-hover: color-mix(in oklch, var(--button-color-background, CanvasText), currentColor 15%);
		--canvas-contrast-active: color-mix(in oklch, var(--button-color-background, CanvasText), currentColor 25%);
		--state-on-background: color-mix(in oklch, var(--button-color-background), Canvas 85%);
	}
}

/* default system theme */
:where(button:not([data-button]), [type='file' i], [data-button~='systemColor' i]) {
	--button-color-background: ButtonFace;
	--button-color-border: ButtonBorder;
	--button-color-text: ButtonText;
	--button-color-hover: var(--system-hover);
	--button-color-active: var(--system-active);
}

:where([data-button~='systemContrast' i]) {
	--button-color-background: ButtonText;
	--button-color-border: transparent;
	--button-color-text: ButtonFace;
	--button-color-hover: var(--system-contrast-hover);
	--button-color-active: var(--system-contrast-active);
}

:where([data-button~='canvasColor' i]) {
	--button-color-background: Canvas;
	--button-color-border: var(--canvas-border);
	--button-color-text: CanvasText;
	--button-color-hover: var(--canvas-hover);
	--button-color-active: var(--canvas-active);
}

:where([data-button~='canvasContrast' i]) {
	--button-color-background: CanvasText;
	--button-color-border: transparent;
	--button-color-text: Canvas;
	--button-color-hover: var(--canvas-contrast-hover);
	--button-color-active: var(--canvas-contrast-active);
}

:where([data-button~='accentColor' i]) {
	--button-color-background: var(--accent-color-background);
	--button-color-border: var(--accent-border);
	--button-color-text: var(--accent-color-text);
	--button-color-hover: var(--accent-hover);
	--button-color-active: var(--accent-active);
}

:where([data-button~='accentContrast' i]) {
	--button-color-background: var(--accent-color-text);
	--button-color-border: transparent;
	--button-color-text: var(--accent-color-background);
	--button-color-hover: var(--canvas-contrast-hover);
	--button-color-active: var(--canvas-contrast-active);
}

[data-button~='muted' i]:where(:not([data-button*='contrast' i])) {
	--button-color-text: var(--muted-color);
	--button-color-on-state: var(--state-on-background);
}

[data-button~='muted' i]:where([data-button*='contrast' i]) {
	--button-color-on-state: var(--muted-color);
}

[data-button~='positive' i]:where(:not([data-button*='contrast' i])) {
	--button-color-text: var(--positive-color);
	--button-color-on-state: var(--state-on-background);
}

[data-button~='positive' i]:where([data-button*='contrast' i]) {
	--button-color-background: var(--positive-color);
	--button-color-text: var(--positive-color-text);
}

[data-button~='negative' i]:where(:not([data-button*='contrast' i])) {
	--button-color-text: var(--negative-color);
	--button-color-on-state: var(--state-on-background);
}

[data-button~='negative' i]:where([data-button*='contrast' i]) {
	--button-color-background: var(--negative-color);
	--button-color-text: var(--negative-color-text);
}

/* intentionally higher specificity to allow outline to override */
[data-button~='outline' i] {
	--button-color-border: currentColor;
}

/* all basic button resets + desirable default behavior: color CSS vars, icon support, alignment */
:where(button),
::file-selector-button,
[data-button]:where(:not([type='file' i])) {
	-webkit-appearance: none;
	appearance: none;
	background-color: var(--button-color-background, transparent);
	background-image: linear-gradient(
			var(--button-color-on-background, transparent),
			var(--button-color-on-background, transparent)
		),
		linear-gradient(var(--button-color-on-state, transparent), var(--button-color-on-state, transparent));
	border: 0 solid var(--button-color-border, transparent);
	color: var(--button-color-text, inherit);
	cursor: pointer;
	display: inline-flex;
	flex-flow: wrap;
	font-size: var(--default-font-size);
	font-weight: 600;
	gap: 0.5rem;
	line-height: 1;
	padding: 0;
	place-content: center;
	position: relative;
	text-decoration: none;
	user-select: none;
	vertical-align: middle;
}

/* focused button outline should always appear above other elements */
:where(button:focus-visible),
[data-button]:where(:focus-visible:not([type='file' i])) {
	z-index: 1;
}

:where(:is(button:not([data-button]), [type='file' i], [data-button]):is(:hover, :focus-visible)) {
	--button-color-on-background: var(--button-color-hover);
}

:where(:is(button:not([data-button]), [type='file' i], [data-button]):active) {
	--button-color-on-background: var(--button-color-active);
}

:where(button:not([data-button])),
::file-selector-button,
[data-button~='mediumSize' i] {
	border-radius: 0.5rem;
	border-width: 0.125rem;
	line-height: 1.5rem;
	padding: 0.625rem 1.5rem;
}

::file-selector-button {
	margin-right: 0.5rem;
	padding-inline: 0.5rem;
}

[data-button~='smallCircle' i] {
	aspect-ratio: 1 / 1;
	border-radius: 50%;
	border-width: 0.125rem;
	padding: 0.125rem;
}

[data-button~='mediumCircle' i] {
	aspect-ratio: 1 / 1;
	border-radius: 50%;
	border-width: 0.125rem;
	padding: 0.375rem;
}

[data-button~='largeCircle' i] {
	aspect-ratio: 1 / 1;
	border-radius: 50%;
	border-width: 0.125rem;
	padding: 0.625rem;
}
